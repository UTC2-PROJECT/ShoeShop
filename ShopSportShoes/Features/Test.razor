@page "/test"
@inject GoogleDriveService GoogleDriveService
@inject ImageRepository ImageRepository
@inject ShoeRepository ShoeRepository
@inject ImageFileService ImageFileService
@inject ISnackbar Snackbar

<InputFile id="fileInput" OnChange="ChangeFiles" hidden multiple />

<MudButton HtmlTag="label"
           Variant="Variant.Filled"
           Color="Color.Primary"
           StartIcon="@Icons.Filled.CloudUpload"
           for="fileInput">
    Upload Files
</MudButton>
<br />
<MudButton OnClick="Click" Variant="Variant.Outlined">Thêm giày</MudButton>
<MudButton OnClick="Remove">Remove</MudButton>

<img src="@_imageName"/>

@code {

    IList<IBrowserFile> files = new List<IBrowserFile>();

    string _imageName;

    byte[] _imageSource = new byte[0];

    private void ChangeFiles(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            files.Add(file);
        }
    }

    string ArrayByteToString(byte[] array)
    {
        string result = "";
        foreach(var item in array)
        {
            result += item;
        }
        return result;
    }

    async Task Click()
    {
        //Shoe shoe = new()
        //{
        //    Title = "Title 1",
        //    Description = "Description 1",
        //    Price = 9000000,
        //    Quantity = 100,
        //    Trademark = "Addidas",
        //    ShoeCatalogId = 2,
        //};
        //Image 
        //var shoeAdded = await ShoeRepository.AddAsync(shoe);
        var stream = files[0].OpenReadStream(10240000);
        _imageSource = new byte[stream.Length];

        await stream.ReadAsync(_imageSource, 0, Convert.ToInt32(stream.Length));
        var base64 = Convert.ToBase64String(_imageSource);
        _imageName = $"data:image/*;base64,{base64}";
    }

    void Remove()
    {
        if (!string.IsNullOrEmpty(_imageName))
        {
            if (ImageFileService.DeleteImage(_imageName))
            {
                Snackbar.Add("Susscess");
            }
        }

    }
}
