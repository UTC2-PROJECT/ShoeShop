@page "/nguoidung/donhang"

@inject OrderRepository OrderRepository
@inject OrderDetailsRepository OrderDetailsRepository
@inject NavigationManager NavigationManager

<MudTable Hover="true" Breakpoint="Breakpoint.Sm" Height="500px" FixedHeader="true"
          Items="@_ordersDetails"
          GroupBy="@_groupDefinition"
          GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
          GroupFooterClass="mb-4" FixedFooter="true"
          Dense="true" Bordered="true">

    <HeaderContent>
        <MudTh><h2>Có @_numberOfOrder đơn hàng đang chờ giao đến bạn</h2></MudTh>
        <MudTh>Trạng thái</MudTh>
        <MudTh>Giá tiền</MudTh>
    </HeaderContent>

    <GroupHeaderTemplate>
        <MudTh Class="mud-table-cell-custom-group" colspan="3">
            <div class="d-flex align-items-center justify-content-between">
                <span style="color:red;">
                    @($"{context.GroupName}: DH{context.Key}") có @context.Items.Count() sản phẩm
                </span>
                <MudButton Variant="Variant.Filled" Size="MudBlazor.Size.Small"
                           OnClick="() => ProgressView((int)context.Key)" Class="mr-3"
                           DisableElevation="true" Color="Color.Primary" 
                           EndIcon="@Icons.Filled.ArrowForward">Xem tiến độ</MudButton>
            </div>
        </MudTh>
    </GroupHeaderTemplate>

    <RowTemplate>
        <MudTd>
            <a href="/sanpham/@context.ShoeId" style="text-decoration:none;">
                <div class="d-flex align-items-center mb-3" style="width:100%;">
                    <MudBadge Content="@(context.Quantity)" Color="Color.Primary" Overlap="true">
                        <div style="border-radius: 5px; border: 1px solid #c3c3c3; width: 66px; height: 66px; overflow:hidden;"
                             class="d-flex align-items-center justify-content-center">
                            <img style="object-fit:cover; width:100%;" src="@context?.ShoeNavigation?.ImagesNavigation?.FirstOrDefault()?.ImageSource" />
                        </div>
                    </MudBadge>
                    <div class="d-flex align-items-center justify-content-between ml-3" style="width:100%;">
                        <div class="d-flex align-items-start justify-content-center flex-column" style="width: 100%;">
                            <span style="font-size:1rem;" class="text-hiding">@context?.ShoeNavigation?.Title</span>
                            <span style="color:#c3c3c3">Size: @context?.Size</span>
                        </div>
                        @*<span style="margin-left:auto; display:block;">@string.Format("{0:#,##0}đ", context?.IntoMoney)</span>*@
                    </div>
                </div>
            </a>
        </MudTd>
        <MudTd>@context?.OrderNavigation?.State</MudTd>
        <MudTd>@string.Format("{0:#,##0}đ", context?.IntoMoney)</MudTd>
    </RowTemplate>

    <GroupFooterTemplate>
        <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="3">
            <div class="d-flex justify-content-center align-items-center my-3">
                <strong>Thành tiền: @string.Format("{0:#,##0}đ", context.Items.Sum((e) => e.IntoMoney)) </strong>
            </div>
        </MudTh>
    </GroupFooterTemplate>

    <FooterContent>
        <MudTh colspan="3">
            <div class="d-flex align-items-center justify-content-end font-weight-bold" style="font-size:1.5rem">
                <span>
                    Tổng tiền: @string.Format("{0:#,##0}đ", @_totalPrice)
                </span>
            </div>
        </MudTh>
    </FooterContent>

</MudTable>

@code {
    [CascadingParameter(Name = "UserCascaded")] public User UserCascaded { get; set; }
    List<OrderDetails> _ordersDetails = new();

    int _numberOfOrder => _ordersDetails.GroupBy(x => x.OrderId).Count();
    double _totalPrice => _ordersDetails.Sum(x => x.IntoMoney);

    protected override void OnInitialized()
    {
        var data = OrderDetailsRepository.GetFilterCustomize(x => x.UserId == UserCascaded.Id && x.OrderId != null);
        _ordersDetails = data.Where(x => x?.OrderNavigation?.State != "Đã giao thành công" && x?.OrderNavigation?.IsCanceled == false).ToList();
    }

    void ProgressView(int OrderId)
    {
        NavigationManager.NavigateTo($"/nguoidung/donhang/{OrderId}");
    }

    private TableGroupDefinition<OrderDetails> _groupDefinition = new()
    {
        GroupName = "Đơn hàng",
        Indentation = false,
        Expandable = false,
        Selector = (e) => e.OrderId
    };
}
