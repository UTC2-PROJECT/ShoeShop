@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

@if (!NavigationManager.Uri.Contains("admin"))
{
    @* HEADER *@
    <HeaderPage />
    <NavMenu />
    <br />

    @* BODY *@
    <MudContainer>
        @Body
    </MudContainer>
    @* FOOTER *@
    <Footer />
}
else
{
    <AuthorizeView Roles="Admin">
        <Authorized>
            <MudLayout>
                <MudAppBar Elevation="1">
                    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
                    <MudSpacer />
                    <LoginDisplay LockCart="true" />
                </MudAppBar>
                <MudDrawer @bind-Open="@open" Elevation="1">
                    <MudDrawerHeader>
                        <div style="width:100%; overflow:hidden;">
                            <img src="./images/logos/logo.jpg" style="object-fit:contain; width:100%; cursor:pointer;"
                                 @onclick="@(() => NavigationManager.NavigateTo("/"))" />
                        </div>
                    </MudDrawerHeader>
                    <ShopSportShoes.Features.AdminPage.Components.AdminNavMenu />
                </MudDrawer>
                <MudMainContent Class="pt-16 px-16">
                    <MudContainer Class="mt-6">
                        @Body
                    </MudContainer>
                </MudMainContent>
            </MudLayout>
        </Authorized>
        <NotAuthorized>
            Đố anh bắt được em
        </NotAuthorized>
    </AuthorizeView>
}

@code {
    bool _isAdminMode;
    bool open = true;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    async Task HandleSwitchMode()
    {
        _isAdminMode = !_isAdminMode;
        await Task.CompletedTask;
    }

    void ToggleDrawer()
    {
        open = !open;
    }

}
